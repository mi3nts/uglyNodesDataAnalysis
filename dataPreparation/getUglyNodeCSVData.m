function uglyNodeCSV = getUglyNodeCSVData(nodeID)

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/uglyNodesDataAnalysis/dataPreparation/001uglyNodeData.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/10/07 14:48:10
filename = strcat('../../../Data/UglyNodes/001e0610',nodeID,'Organized.csv');
delimiter = ',';
startRow = 2;

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: text (%s)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%s%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
uglyNodeCSV = table(dataArray{1:end-1}, 'VariableNames', {'dateTime','apds_9006_020_intensity','bmp180_pressure','bmp180_temperature','hih4030_humidity','hih6130_humidity','hih6130_temperature','htu21d_humidity','htu21d_temperature','ml8511_intensity','mlx75305_intensity','opc_n2_bin0','opc_n2_bin1','opc_n2_bin10','opc_n2_bin11','opc_n2_bin12','opc_n2_bin13','opc_n2_bin14','opc_n2_bin15','opc_n2_bin2','opc_n2_bin3','opc_n2_bin4','opc_n2_bin5','opc_n2_bin6','opc_n2_bin7','opc_n2_bin8','opc_n2_bin9','opc_n2_bins','opc_n2_pm1','opc_n2_pm10','opc_n2_pm2_5','opc_n2_sample_flow_rate','opc_n2_sampling_period','pr103j2_temperature','spv1840lr5h_b_intensity','tmp112_temperature','tmp421_temperature','tsl250rd_intensity','tsl260rd_intensity','tsys01_temperature'});

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
end

